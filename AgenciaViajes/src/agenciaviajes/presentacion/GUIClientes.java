package agenciaviajes.presentacion;

import agenciaviajes.negocio.Cliente;
import agenciaviajes.negocio.GestorClientes;
import agenciaviajes.utils.Utilidades;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import mvcf.AModel;
import mvcf.AView;

/**
 *
 * @author Libardo, Julio, Ricardo
 *
 */
public class GUIClientes extends javax.swing.JFrame implements AView {

    //private GestorClientes gestor;
    /**
     * acción que define si es: AGREGAR, EDITAR o ELIMINAR
     */
    private String accion;

    /**
     * Constructor
     */
    public GUIClientes() {
        initComponents();

        setSize(870, 500);
        setLocation(50, 300);

        fijarMensajeExplicacion();

        botonesEstadoInicial();

    }

    public JButton getBtnEliminar() {
        return btnEliminar;
    }

    public JButton getBtnGrabar() {
        return btnGrabar;
    }

    /**
     * Mensaje inicial del panel superior
     */
    private void fijarMensajeExplicacion() {
        StringBuilder sb = new StringBuilder(64);
        sb.append("<html>" + "Este ejercicio es cliente/servidor y utiliza un miniframework MVC.<br>"
                + "La aplicación cliente se conecta al servidor (Registraduria) mediante Sockets.<br>"
                + "Si el id del cliente no está en la bd de la agencia, la solicita a la registraduría.<br>"
                + "La aplicación, además, tiene persistencia mediante Jdbc.<br>"
                + "En la bd de la registraduría están las cedulas desde 98000001 hasta 98000010.<br>"
                + "</html>");
        lblExplicacion.setText(sb.toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlCentro = new javax.swing.JPanel();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCelular = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cboSexo = new javax.swing.JComboBox<>();
        lblMensaje = new javax.swing.JLabel();
        pnlSur = new javax.swing.JPanel();
        btnGrabar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        pnlNorte = new javax.swing.JPanel();
        lblExplicacion = new javax.swing.JLabel();

        setTitle("Clientes");

        pnlCentro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlCentro.setLayout(new java.awt.GridLayout(8, 2));

        lblId.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId.setText("Número de identificación:");
        pnlCentro.add(lblId);

        txtId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdFocusLost(evt);
            }
        });
        pnlCentro.add(txtId);

        lblNombre.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNombre.setText("Nombres:");
        pnlCentro.add(lblNombre);
        pnlCentro.add(txtNombres);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Apellidos:");
        pnlCentro.add(jLabel1);
        pnlCentro.add(txtApellidos);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Dirección (opcional):");
        pnlCentro.add(jLabel2);
        pnlCentro.add(txtDireccion);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Celular (opcional):");
        pnlCentro.add(jLabel3);
        pnlCentro.add(txtCelular);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Email (opcional):");
        pnlCentro.add(jLabel5);
        pnlCentro.add(txtEmail);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Sexo:");
        pnlCentro.add(jLabel6);

        cboSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Femenino" }));
        pnlCentro.add(cboSexo);

        lblMensaje.setForeground(java.awt.Color.blue);
        pnlCentro.add(lblMensaje);

        getContentPane().add(pnlCentro, java.awt.BorderLayout.CENTER);

        pnlSur.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnGrabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/grabar.png"))); // NOI18N
        btnGrabar.setText("Grabar");
        pnlSur.add(btnGrabar);

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/remove.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        pnlSur.add(btnEliminar);

        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/cerrar.png"))); // NOI18N
        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        pnlSur.add(btnCerrar);

        getContentPane().add(pnlSur, java.awt.BorderLayout.SOUTH);

        pnlNorte.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblExplicacion.setText("lblExplicacion");
        pnlNorte.add(lblExplicacion);

        getContentPane().add(pnlNorte, java.awt.BorderLayout.NORTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnCerrarActionPerformed
    /**
     * Valida que los datos estén correctamente diligenciados en el formulario
     *
     * @return true si están bien diligenciados, false en caso contrario
     */
    public boolean validarFormulario() {
        if (this.getId().equals("")) {
            Utilidades.mensajeAdvertencia("Debe agregar la identificación del empleado", "Atención");
            txtNombres.requestFocus();
            return false;
        }
        if (this.getNombres().equals("")) {
            Utilidades.mensajeAdvertencia("Debe agregar los nombres del empleado", "Atención");
            txtNombres.requestFocus();
            return false;
        }

        if (this.getApellidos().equals("")) {
            Utilidades.mensajeAdvertencia("Debe agregar los apellidos del empleado", "Atención");
            txtApellidos.requestFocus();
            return false;
        }
        return true;
    }

    public String getId() {
        return txtId.getText().trim();
    }

    public String getNombres() {
        return Utilidades.capitalize(txtNombres.getText().trim());
    }

    public String getApellidos() {
        return Utilidades.capitalize(txtApellidos.getText().trim());
    }

    public String getDireccion() {
        return txtDireccion.getText().trim();
    }

    public String getCelular() {
        return txtCelular.getText().trim();
    }

    public String getEmail() {
        return txtEmail.getText().trim();

    }

    public String getSexo() {
        return cboSexo.getSelectedItem().toString();
    }

    public void botonesEstadoInicial() {
        btnGrabar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }

    private void txtIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdFocusLost
        String id = txtId.getText().trim();
        GestorClientes gestor = new GestorClientes();
        if (id.equals("")) {
            return;
        }
        // Busca el cliente en la base de datos local
        Cliente cli = null;
        try {
            cli = gestor.buscarCliente(id);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(GUIClientes.class.getName()).log(Level.SEVERE, null, ex);
            Utilidades.mensajeError("Error al buscar el cliente en la base de datos de la agencia", "Atención");
        }
        if (cli == null) {
            // Es un cliente que no está en la bd de la agencia. Por lo tanto,
            // lo busca en la registraduría
            accion = "AGREGAR";

            cli = gestor.buscarClienteRegistraduria(id);
            if (cli == null) {
                limpiarCajas(false);
                btnGrabar.setEnabled(true);

            } else {
                lblMensaje.setText("Los datos del cliente fueron consultados en la registraduría.");
                fijarCamposFormulario(cli);
                btnGrabar.setEnabled(true);
            }

        } else {
            txtId.setText(cli.getId());
            fijarCamposFormulario(cli);
            accion = "EDITAR";
            btnGrabar.setEnabled(true);
            btnEliminar.setEnabled(true);

        }

    }//GEN-LAST:event_txtIdFocusLost

    private void fijarCamposFormulario(Cliente cli) {
        txtNombres.setText(cli.getNombres());
        txtApellidos.setText(cli.getApellidos());
        txtDireccion.setText(cli.getDireccion());
        txtCelular.setText(cli.getCelular());
        txtEmail.setText(cli.getEmail());
        cboSexo.setSelectedItem(cli.getSexo());
    }

    public void limpiarCajas(boolean todas) {
        if (todas) {
            txtId.setText("");
        }
        lblMensaje.setText("");
        txtNombres.setText("");
        txtApellidos.setText("");
        txtDireccion.setText("");
        txtCelular.setText("");
        txtEmail.setText("");
        cboSexo.setSelectedIndex(0);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGrabar;
    private javax.swing.JComboBox<String> cboSexo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblExplicacion;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblMensaje;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JPanel pnlCentro;
    private javax.swing.JPanel pnlNorte;
    private javax.swing.JPanel pnlSur;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actualizar(AModel amodel) {

    }

    public String getAccion() {
        return accion;
    }

    public void setAccion(String accion) {
        this.accion = accion;
    }

}
